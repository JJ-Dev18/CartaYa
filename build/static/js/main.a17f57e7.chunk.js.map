{"version":3,"sources":["serviceWorker.js","hooks/useForm.js","types/types.js","componentes/Custom.js","actions/custom.js","actions/auth.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/admin/PrivateAdminRouter.js","helpers/getUser.js","componentes/Login.js","componentes/Register.js","componentes/Admin/LoginAdmin.js","routers/AuthRouter.js","componentes/Menu.js","componentes/Admin/AdminUsers.js","routers/AdminRouter.js","routers/admin/PublicRouterAdmin.js","routers/AppRouter.js","store/store.js","reducers/authReducer.js","reducers/customReducer.js","CartaYa.js","index.js"],"names":["Boolean","window","location","hostname","match","useForm","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","types","login","loggout","loginAdmin","logoutAdmin","LogSetError","LogRemoveError","LogSetErrorAdmin","colores","colorS","Custom","history","dispatch","useDispatch","inp1","useRef","inp2","inpLogo","imgLog","colorP","setColorP","setColorS","logo","setLogo","formValues","className","onSubmit","e","preventDefault","nameEmpresa","url","type","payload","datos","customs","push","ref","onChange","current","color","src","lo","document","querySelector","console","log","alt","Input","preview","file","files","reader","FileReader","onloadend","result","readAsDataURL","accept","placeholder","Button","variant","style","marginTop","onClick","PublicRouter","isLoggedIn","Component","component","rest","props","to","PrivateRouter","isAdmin","localStorage","setItem","pathname","PrivateAdminRouter","getUser","user","password","a","fetch","resp","json","content","Login","useSelector","state","auth","error","msgError","formValue","then","tok","setError","id","size","Alert","severity","Register","autoComplete","LoginAdmin","errorAdmin","msgErrorAdmin","noValidate","adminN","TextField","label","AuthRouter","path","Menu","custom","backgroundColor","AdminUsers","React","setAuth","anchorEl","setAnchorEl","open","handleClose","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","AppBar","position","Toolbar","IconButton","edge","Typography","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","AdminRouter","exact","PublicRouterAdmin","AppRouter","logged","admin","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","CartaYa","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a17f57e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import  { useState } from 'react'\r\n// custom hook se encarga de validar los formularios\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset= () => {\r\n        setvalues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setvalues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        });\r\n    }\r\n\r\n    return [values , handleInputChange, reset]\r\n}\r\n","\r\n\r\nexport const types ={\r\n\r\n     //auth\r\n     login : '[Auth] Login' ,\r\n     loggout : '[Auth] Logout',\r\n     //admin\r\n     loginAdmin:'[Admin] Login',\r\n     logoutAdmin : '[Admin] Logout',\r\n     //errores\r\n     LogSetError : '[User] Set Error',\r\n     LogRemoveError : '[User] Remove Error',\r\n     LogSetErrorAdmin :'[Admin] Set Error',\r\n     //custom\r\n     colores : '[CM] colorP',\r\n     colorS : '[CM] colorS',\r\n\r\n}","import React, { useState, useRef } from 'react'\r\nimport '../styles/custom.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { customs } from '../actions/custom';\r\nimport { loggout } from '../actions/auth';\r\nimport { Input } from '@material-ui/core'\r\nimport {Button}from '@material-ui/core/';\r\n\r\n\r\nexport const Custom = ({history}) => {\r\n    // const [color, setColor] = useState('#000')\r\n    const dispatch = useDispatch();\r\n    const inp1 = useRef(null)\r\n    const inp2 = useRef(null)\r\n    const inpLogo = useRef(null)\r\n    const imgLog = useRef()\r\n    const [colorP, setColorP] = useState('#FFFFFF')\r\n    const [colorS, setColorS] = useState('#FFFFFF')\r\n    const [logo, setLogo] = useState(\"/assets/logo.png\")\r\n    const[formValues,handleInputChange] = useForm('')\r\n   \r\n   \r\n    const handleColorP = (e) => {\r\n\r\n        setColorP(inp1.current.value) \r\n    }\r\n    const handleColorS = (e) => {\r\n\r\n        setColorS(inp2.current.value)  \r\n    }\r\n    const handleInputLogo = () => {\r\n        var preview = document.querySelector('img');\r\n        var file    = document.querySelector('input[type=file]').files[0];\r\n        var reader  = new FileReader();\r\n      \r\n        reader.onloadend = function () {\r\n          preview.src = reader.result; \r\n          setLogo(preview.src) \r\n        }\r\n       \r\n      \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        \r\n        \r\n        } else {\r\n          preview.src = \"\";\r\n        }\r\n        \r\n        console.log(preview.src)\r\n      }\r\n\r\n      const handleLogo = (e) => {\r\n        const lo = document.querySelector('img');\r\n\r\n        console.log(lo)\r\n      }\r\n    const handleCustom = (e) => {\r\n    e.preventDefault()\r\n    dispatch(customs(colorP,colorS,formValues,logo));\r\n    history.push('/custom/menu')\r\n    }\r\n    const handleLogout = (e) => {\r\n        dispatch(loggout())\r\n        console.log(\"deslogueado\")\r\n    }\r\n  \r\n    \r\n    return (\r\n        <div className=\"content__custom\">\r\n            \r\n\r\n            <form className=\"form__custom\" onSubmit={handleCustom}>\r\n                <h1 className=\"title__custom\">Personalizar Menu</h1>\r\n                <div className=\"content__input\">\r\n                    <label className=\"text__input\">Escoger Color primario</label>\r\n                    <input ref={inp1} value={colorP} onChange={handleColorP} type=\"color\" color=\"secondary\" />\r\n                </div>\r\n                <div className=\"content__input\">\r\n                    <label className=\"text__input\">Escoger Color secundario</label>\r\n                    <input ref={inp2} value={colorS} onChange={handleColorS} type=\"color\" color=\"secondary\" />\r\n                </div>   \r\n\r\n                <div className=\"content__logo\">\r\n                    <label className=\"text__input\"> Subir Logo</label>\r\n                    <div className=\"logo\">\r\n                    <img ref={imgLog}  src={logo} className=\"logo\" onChange={handleLogo} alt=\"logo\"></img>\r\n                    </div>\r\n                    <Input ref={inpLogo} type=\"file\" onChange={handleInputLogo} accept=\"image/*\"/>\r\n                   \r\n                 </div> \r\n                \r\n\r\n                 <div className=\"content__input \">\r\n                     <label className=\"text__input\">Nombre</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"NombreE\" \r\n                     placeholder=\"Nombre de la empresa\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n                     <div className=\"content__input \">\r\n                     <label className=\"text__input\">Telefono</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"telefono\" \r\n                     placeholder=\"Telefono\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n                     <div className=\"content__input \">\r\n                     <label className=\"text__input\">Direccion</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"direccion\" \r\n                     placeholder=\"Direccion\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n\r\n                     <Button\r\n                     className=\"btn\"\r\n                     variant=\"contained\" \r\n                     type=\"submit\"\r\n                     color=\"secondary\"\r\n                     style={{marginTop: '40px'}}>Aceptar</Button>\r\n\r\n            </form> <Button className=\"btn\" onClick={handleLogout} color=\"secondary\" variant=\"contained\">Logout</Button>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const customs = (colorP,colorS,nameEmpresa,url) =>( {\r\n   \r\n    type: types.colores,\r\n    payload: {\r\n        colorP : colorP,\r\n        colorS : colorS,\r\n        datos : nameEmpresa,\r\n        url: url\r\n    }\r\n\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const login = (user,password ) => ({\r\n\r\n    type: types.login,\r\n    payload : {\r\n        user:user,\r\n        password: password\r\n    }\r\n\r\n})\r\nexport const loggout = () =>( {\r\n\r\n    type : types.loggout\r\n\r\n})\r\n\r\nexport const loginAdmin = (user,password) =>( {\r\n\r\n    type: types.loginAdmin,\r\n    payload : {\r\n        adminN: user,\r\n        password : password \r\n    }\r\n})\r\n\r\nexport const logoutAdmint = () =>( {\r\n    type: types.logoutAdmint,\r\n    \r\n})\r\n\r\nexport const setError = (msgError) => ({\r\n\r\n    type: types.LogSetError,\r\n    payload : msgError\r\n    \r\n   \r\n    \r\n})\r\n\r\nexport const setErrorAdmin = (msgError) => ({\r\n\r\n    type: types.LogSetErrorAdmin,\r\n    payload : msgError\r\n    \r\n   \r\n    \r\n})\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouter = ({\r\n    isLoggedIn,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (!isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/custom\" />)\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ({\r\n    isLoggedIn,\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/login\" />)\r\n        )}\r\n        />\r\n    )\r\n            \r\n            // (isLoggedIn )\r\n            // ? (<Component {...props} />) \r\n            // : (<Redirect to =\"/login\" />)\r\n        \r\n    \r\n        \r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateAdminRouter = ({\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n         component={ (props) => (\r\n            (isAdmin)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/admin\" />)\r\n        )}\r\n        />\r\n    )\r\n        \r\n}\r\n\r\nPrivateAdminRouter.propTypes = {\r\n\r\n    isAdmin : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","\r\n\r\n\r\nexport const getUser = async (user,password) => {\r\n\r\n    const url = `http://montesanto.graciadev.com/api/login/login?user=${user}&pass=${password}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {content} = await resp.json();\r\n\r\n    \r\n    return content ;\r\n\r\n}","import React  from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { login, setError } from '../actions/auth'\r\nimport {Button} from '@material-ui/core/'\r\nimport '../styles/login.css'\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUser } from '../helpers/getUser'\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {error,msgError} = useSelector( state => state.auth );\r\n    const [formValue,handleInputChange] = useForm({\r\n\r\n        user:'admin',\r\n        password:'123456'\r\n    })\r\n    \r\n    const{user,password} = formValue;\r\n  \r\n   \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        getUser(user,password).then(tok => {\r\n            if(tok){\r\n                dispatch(login(user,password))\r\n            }else{\r\n                dispatch(setError('Usuario o contraseña incorrecta'))\r\n            }\r\n           \r\n        })\r\n       \r\n\r\n        \r\n        \r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"content__form-login\">\r\n            \r\n                <form className=\"form__login\" onSubmit={handleLogin}>\r\n                <h1 className=\"name__carta\"> Carta YA ! </h1>\r\n                    \r\n                    <input type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"user\"\r\n                        value={user}\r\n                        className=\"auth__input\"\r\n                        onChange={handleInputChange} \r\n                        id=\"id__email\"\r\n                        />\r\n                    <input type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        className=\"auth__input\"\r\n                        onChange={handleInputChange} \r\n                        />\r\n                    <Button className=\"btn\" type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\" > Login</Button>\r\n                    { (error) && <Alert severity=\"error\">{msgError}</Alert>} \r\n                   <Link className=\"text__registro\" to=\"/admin\"> Admin </Link>\r\n                    \r\n                     <Link className=\"text__registro\" to=\"/auth/register\">\r\n                         Registrarse</Link>\r\n                </form>\r\n               \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport {Button} from '@material-ui/core'\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div className=\"content__form-login\">\r\n            \r\n            <form className=\"form__login\">\r\n                {/* {\r\n                    (msgError !== null) &&\r\n                    <div className=\"auth__alert-error\">\r\n                      {msgError}\r\n                    </div>\r\n                } */}\r\n            <h3 className=\"name__carta\">Registro </h3>\r\n           \r\n            <input type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                id=\"id__email\"\r\n                // onChange={handleInputChange}\r\n                />\r\n                \r\n               \r\n                <input type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // \r\n                />\r\n                \r\n                <input type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // value={password}\r\n                />\r\n                <input type=\"password\"\r\n                placeholder=\"Confirm Password \"\r\n                name=\"password2\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // value={password2}\r\n                />\r\n\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"onSubmit\" className=\"btn\">Registrarme</Button>\r\n                 \r\n                 <Link to=\"/auth/login\" className=\" text__registro\" >\r\n                     ¿ Ya esta registrado ?\r\n            </Link>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TextField,Button} from '@material-ui/core'\r\nimport '../../styles/adminPrincipal.css'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { loginAdmin, setErrorAdmin } from '../../actions/auth'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUser } from '../../helpers/getUser'\r\n\r\n\r\n\r\nexport const LoginAdmin = (({history}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {errorAdmin,msgErrorAdmin} = useSelector( state => state.auth );\r\n    const [formValues,handleInputChange] = useForm({\r\n        user: 'admin',\r\n        password: '123456'\r\n    })\r\n    \r\n    const {user,password} = formValues   \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        getUser(user,password).then(tok => {\r\n            if(tok){\r\n                dispatch(loginAdmin(user,password))\r\n            }\r\n            else{\r\n                \r\n                dispatch(setErrorAdmin('Usuario o contraseña incorrecta'))\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"contain__admin_login\">\r\n            <div className=\"contain__form-login\">\r\n                <form className=\"form__login-admin\" noValidate autoComplete=\"off\" onSubmit={handleLogin}>\r\n                    <h1 className=\"text__login\">LOGIN</h1>\r\n                     { (errorAdmin) && <Alert severity=\"error\">{msgErrorAdmin}</Alert>} \r\n                    <TextField id=\"standard-basic\" label=\"Usuario\" value={user} name=\"user\" onChange={handleInputChange}/>\r\n                    <TextField id=\"filled-basic\" label=\"Contraseña\" value={password} name=\"password\" onChange={handleInputChange}/>\r\n                    <Button variant=\"contained\" color=\"secondary\" type=\"onSubmit\" className=\"btn__login\" >Login</Button>\r\n                \r\n                    <Link className=\"text__registro\" to=\"/auth\"> User </Link>   \r\n                              \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n)","import React from 'react'\r\n\r\nimport {\r\n   \r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\nimport { Login } from '../componentes/Login';\r\nimport { Register } from '../componentes/Register';\r\nimport {LoginAdmin} from '../componentes/Admin/LoginAdmin'\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n            <Route  path=\"/auth/login\" component={ Login} />\r\n            <Route  path=\"/auth/register\" component={ Register} />\r\n            {/* <Route path =\"/auth/admin\" component={LoginAdmin} /> */}\r\n\r\n            <Redirect to =\"/auth/login\" />\r\n            </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport '../styles/menu.css'\r\nimport { CustomMenu } from './CustomMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Menu = () => {\r\n\r\n    const {colorP,colorS,url} = useSelector( state => state.custom );\r\n    console.log(url)\r\n    return (\r\n        <div className=\"content__menu\" style={{backgroundColor:colorP}}>\r\n            <div className=\"menu\">\r\n                {/* <CustomMenu/> */}\r\n                <nav className=\"nav__menu\" style={{backgroundColor:colorS}} >\r\n                <div className=\"logo\">\r\n                <img src={url} alt=\"logo\"></img>\r\n                 </div>   \r\n                    <ul className=\"list__nav\"> \r\n                        <li className=\"item__nav\">Entradas</li>\r\n                        <li className=\"item__nav\">Platos Fuertes</li>\r\n                        <li className=\"item__nav\">Postres</li>\r\n                        <li className=\"item__nav\">Bebidas</li>\r\n                    </ul>\r\n                    \r\n                </nav>\r\n                <div className=\"content__menu-info\">\r\n                    <h1>Menu</h1\r\n                    ></div>\r\n                \r\n                <Link to=\"/drap\"> drap and drop </Link>\r\n            </div>\r\n           \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nexport const AdminUsers = () => {\r\n    \r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n    return (\r\n        <div >\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Logout' : 'Login'}\r\n        />\r\n      </FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" >\r\n            ADMINISTRADOR\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n   \r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\n\r\nimport { PrincipalAdmin } from '../componentes/Admin/LoginAdmin';\r\nimport { AdminUsers } from '../componentes/Admin/AdminUsers';\r\n\r\n\r\n\r\nexport const AdminRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n            \r\n            <Route exact path=\"/\" component={AdminUsers} />\r\n\r\n            <Redirect to =\"/auth/admin\" />\r\n            </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouterAdmin = ({\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n         component={ (props) => (\r\n            (!isAdmin)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/\" />)\r\n        )}\r\n        />\r\n    )\r\n        \r\n}\r\n\r\nPublicRouterAdmin.propTypes = {\r\n\r\n    isAdmin : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux'\r\nimport React ,{useEffect} from 'react';\r\nimport { Custom } from \"../componentes/Custom\";\r\nimport {PublicRouter} from './PublicRoute'\r\nimport {PrivateRouter }from './PrivateRoute'\r\nimport {PrivateAdminRouter} from './admin/PrivateAdminRouter'\r\nimport {AuthRouter} from './AuthRouter'\r\nimport { Menu } from \"../componentes/Menu\";\r\nimport { DrapandDrop } from \"../componentes/DrapandDrop\";\r\nimport {AdminRouter} from './AdminRouter'\r\nimport { PublicRouterAdmin } from \"./admin/PublicRouterAdmin\";\r\nimport { LoginAdmin } from \"../componentes/Admin/LoginAdmin\";\r\n\r\n\r\n\r\n\r\nexport default function AppRouter() {\r\n \r\n  \r\n  const {logged,admin} = useSelector( state => state.auth );\r\n  console.log(logged,admin)\r\n\r\n  \r\n  \r\n  return (\r\n   \r\n      \r\n        <Router>\r\n        <div>\r\n      \r\n            <Switch>\r\n               \r\n               \r\n                {/* <PrivateAdminRouter isAdmin={admin}  path=\"/admin\" component={AdminRouter} /> */}\r\n                <PublicRouter isLoggedIn={logged}  path=\"/auth\" component={ AuthRouter}/>\r\n                \r\n                <PrivateAdminRouter isAdmin={admin} exact path=\"/\" component={AdminRouter} />\r\n                <PublicRouterAdmin isAdmin={admin} path= \"/admin\" component={LoginAdmin} />\r\n                \r\n                <PrivateRouter isLoggedIn={logged}  path =\"/custom/menu\" component={Menu}/>\r\n                {/* <PrivateRouter isLoggedIn={logged}  path=\"/drap\" component={DrapandDrop} /> */}\r\n                <PrivateRouter isLoggedIn={logged}  exact path=\"/custom\" component={Custom} />\r\n                \r\n                 \r\n                <Redirect to =\"/auth/login\" />\r\n             </Switch>\r\n\r\n        </div>\r\n         \r\n    </Router>\r\n     \r\n  );\r\n}","import {createStore,combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { customReducer } from '../reducers/customReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    custom: customReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = { logged: false, admin: false }, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                ...action.payload,\r\n                logged: true,\r\n                admin: false\r\n            }\r\n        case types.loggout:\r\n            return {\r\n                ...action.payload,\r\n                logged: false,\r\n                admin: false\r\n            }\r\n        case types.loginAdmin:\r\n            return {\r\n                ...action.payload,\r\n                admin: true,\r\n                logged: false\r\n            }\r\n        case types.logoutAdmin:\r\n            return {\r\n\r\n                admin: false,\r\n                logged: false\r\n            }\r\n        case types.LogSetError:\r\n            return {\r\n                error: true,\r\n                msgError: action.payload\r\n            }\r\n\r\n            case types.LogSetErrorAdmin:\r\n            return {\r\n                errorAdmin: true,\r\n                msgErrorAdmin: action.payload\r\n            }\r\n        case types.LogRemoveError:\r\n            return {\r\n                error: null,\r\n                msgError: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const customReducer = (state = {},action) => {\r\n\r\n    switch (action.type) {\r\n        case types.colores:\r\n            return{\r\n                ...action.payload\r\n            }\r\n    \r\n        default :\r\n        return state ;\r\n    }\r\n}","import React  from 'react'\r\nimport './cartaYa.css'\r\n\r\nimport AppRouter from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CartaYa = () => {\r\n    \r\n    return (\r\n        \r\n        <Provider store = {store} >\r\n          <AppRouter/>\r\n        </Provider>\r\n      \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { CartaYa } from './CartaYa';\n\nReactDOM.render(\n \n    <CartaYa />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}