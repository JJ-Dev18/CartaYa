{"version":3,"sources":["serviceWorker.js","hooks/useForm.js","types/types.js","componentes/Custom.js","actions/custom.js","actions/auth.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/admin/PrivateAdminRouter.js","helpers/getUser.js","componentes/Login.js","componentes/Register.js","componentes/Admin/LoginAdmin.js","routers/AuthRouter.js","componentes/Menu.js","componentes/Admin/AddUser.js","componentes/Admin/ListUser.js","hooks/useFetch.js","actions/users.js","componentes/Admin/AdminUsers.js","routers/AdminRouter.js","routers/admin/PublicRouterAdmin.js","routers/AppRouter.js","store/store.js","reducers/authReducer.js","reducers/customReducer.js","CartaYa.js","index.js"],"names":["Boolean","window","location","hostname","match","useForm","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","types","Custom","history","dispatch","useDispatch","inp1","useRef","inp2","inpLogo","imgLog","colorP","setColorP","colorS","setColorS","logo","setLogo","formValues","className","onSubmit","e","preventDefault","nameEmpresa","url","type","payload","datos","customs","push","ref","onChange","current","color","src","lo","document","querySelector","console","log","alt","Input","preview","file","files","reader","FileReader","onloadend","result","readAsDataURL","accept","placeholder","Button","variant","style","marginTop","onClick","PublicRouter","isLoggedIn","Component","component","rest","props","to","PrivateRouter","isAdmin","localStorage","setItem","pathname","PrivateAdminRouter","getUser","user","password","a","fetch","resp","json","content","Login","useSelector","state","auth","error","msgError","formValue","then","tok","login","setError","catch","message","id","size","Alert","severity","Register","autoComplete","LoginAdmin","errorAdmin","msgErrorAdmin","noValidate","adminN","loginAdmin","TextField","label","AuthRouter","path","Menu","custom","backgroundColor","useStyles","makeStyles","theme","root","margin","spacing","width","AddUser","classes","required","defaultValue","disabled","InputProps","readOnly","InputLabelProps","shrink","helperText","StyledTableCell","withStyles","head","palette","common","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","ListUser","isMounted","data","loading","setstate","useEffect","useFetch","handleView","TableContainer","Paper","LinearProgress","Table","aria-label","TableHead","align","TableBody","map","inf","key","char_id","scope","nickname","category","startIcon","display","appBar","zIndex","drawer","justifyContent","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","padding","mixins","flexGrow","AdminUsers","useTheme","showUser","setShowUser","showAdd","setShowAdd","React","open","setOpen","handleUsuarios","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","endIcon","AdminRouter","exact","PublicRouterAdmin","AppRouter","logged","admin","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","thunk","CartaYa","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9bdcf11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import  { useState } from 'react'\r\n// custom hook se encarga de validar los formularios\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset= () => {\r\n        setvalues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setvalues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        });\r\n    }\r\n\r\n    return [values , handleInputChange, reset]\r\n}\r\n","\r\n\r\nexport const types ={\r\n\r\n     //auth\r\n     login : '[Auth] Login' ,\r\n     loggout : '[Auth] Logout',\r\n     //admin\r\n     loginAdmin:'[Admin] Login',\r\n     logoutAdmin : '[Admin] Logout',\r\n     //errores\r\n     LogSetError : '[User] Set Error',\r\n     LogRemoveError : '[User] Remove Error',\r\n     LogSetErrorAdmin :'[Admin] Set Error',\r\n     //Users\r\n     UserAdd : '[User] Add',\r\n     UserDelete : '[User] Delete',\r\n     UserEdit : '[User] Edit',\r\n     //custom\r\n     colores : '[CM] colorP',\r\n     colorS : '[CM] colorS',\r\n\r\n}","import React, { useState, useRef } from 'react'\r\nimport '../styles/custom.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { customs } from '../actions/custom';\r\nimport { loggout } from '../actions/auth';\r\nimport { Input } from '@material-ui/core'\r\nimport {Button}from '@material-ui/core/';\r\n\r\n\r\nexport const Custom = ({history}) => {\r\n    // const [color, setColor] = useState('#000')\r\n    const dispatch = useDispatch();\r\n    const inp1 = useRef(null)\r\n    const inp2 = useRef(null)\r\n    const inpLogo = useRef(null)\r\n    const imgLog = useRef()\r\n    const [colorP, setColorP] = useState('#FFFFFF')\r\n    const [colorS, setColorS] = useState('#FFFFFF')\r\n    const [logo, setLogo] = useState(\"/assets/logo.png\")\r\n    const[formValues,handleInputChange] = useForm('')\r\n   \r\n   \r\n    const handleColorP = (e) => {\r\n\r\n        setColorP(inp1.current.value) \r\n    }\r\n    const handleColorS = (e) => {\r\n\r\n        setColorS(inp2.current.value)  \r\n    }\r\n    const handleInputLogo = () => {\r\n        var preview = document.querySelector('img');\r\n        var file    = document.querySelector('input[type=file]').files[0];\r\n        var reader  = new FileReader();\r\n      \r\n        reader.onloadend = function () {\r\n          preview.src = reader.result; \r\n          setLogo(preview.src) \r\n        }\r\n       \r\n      \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        \r\n        \r\n        } else {\r\n          preview.src = \"\";\r\n        }\r\n        \r\n        console.log(preview.src)\r\n      }\r\n\r\n      const handleLogo = (e) => {\r\n        const lo = document.querySelector('img');\r\n\r\n        console.log(lo)\r\n      }\r\n    const handleCustom = (e) => {\r\n    e.preventDefault()\r\n    dispatch(customs(colorP,colorS,formValues,logo));\r\n    history.push('/custom/menu')\r\n    }\r\n    const handleLogout = (e) => {\r\n        dispatch(loggout())\r\n        console.log(\"deslogueado\")\r\n    }\r\n  \r\n    \r\n    return (\r\n        <div className=\"content__custom\">\r\n            \r\n\r\n            <form className=\"form__custom\" onSubmit={handleCustom}>\r\n                <h1 className=\"title__custom\">Personalizar Menu</h1>\r\n                <div className=\"content__input\">\r\n                    <label className=\"text__input\">Escoger Color primario</label>\r\n                    <input ref={inp1} value={colorP} onChange={handleColorP} type=\"color\" color=\"secondary\" />\r\n                </div>\r\n                <div className=\"content__input\">\r\n                    <label className=\"text__input\">Escoger Color secundario</label>\r\n                    <input ref={inp2} value={colorS} onChange={handleColorS} type=\"color\" color=\"secondary\" />\r\n                </div>   \r\n\r\n                <div className=\"content__logo\">\r\n                    <label className=\"text__input\"> Subir Logo</label>\r\n                    <div className=\"logo\">\r\n                    <img ref={imgLog}  src={logo} className=\"logo\" onChange={handleLogo} alt=\"logo\"></img>\r\n                    </div>\r\n                    <Input ref={inpLogo} type=\"file\" onChange={handleInputLogo} accept=\"image/*\"/>\r\n                   \r\n                 </div> \r\n                \r\n\r\n                 <div className=\"content__input \">\r\n                     <label className=\"text__input\">Nombre</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"NombreE\" \r\n                     placeholder=\"Nombre de la empresa\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n                     <div className=\"content__input \">\r\n                     <label className=\"text__input\">Telefono</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"telefono\" \r\n                     placeholder=\"Telefono\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n                     <div className=\"content__input \">\r\n                     <label className=\"text__input\">Direccion</label>\r\n                     <input \r\n                     className=\"input__empresa\"\r\n                     type=\"text\" \r\n                     name=\"direccion\" \r\n                     placeholder=\"Direccion\"\r\n                     onChange={handleInputChange}></input>\r\n                     \r\n                     </div> \r\n\r\n                     <Button\r\n                     className=\"btn\"\r\n                     variant=\"contained\" \r\n                     type=\"submit\"\r\n                     color=\"secondary\"\r\n                     style={{marginTop: '40px'}}>Aceptar</Button>\r\n\r\n            </form> <Button className=\"btn\" onClick={handleLogout} color=\"secondary\" variant=\"contained\">Logout</Button>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const customs = (colorP,colorS,nameEmpresa,url) =>( {\r\n   \r\n    type: types.colores,\r\n    payload: {\r\n        colorP : colorP,\r\n        colorS : colorS,\r\n        datos : nameEmpresa,\r\n        url: url\r\n    }\r\n\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const login = (user,password ) => ({\r\n\r\n    type: types.login,\r\n    payload : {\r\n        user:user,\r\n        password: password\r\n    }\r\n\r\n})\r\nexport const loggout = () =>( {\r\n\r\n    type : types.loggout\r\n\r\n})\r\n\r\nexport const loginAdmin = (user,password) =>( {\r\n\r\n    type: types.loginAdmin,\r\n    payload : {\r\n        adminN: user,\r\n        password : password \r\n    }\r\n})\r\n\r\nexport const logoutAdmin= () =>( {\r\n    type: types.logoutAdmin\r\n    \r\n})\r\n\r\nexport const setError = (msgError) => ({\r\n\r\n    type: types.LogSetError,\r\n    payload : msgError\r\n    \r\n   \r\n    \r\n})\r\n\r\nexport const setErrorAdmin = (msgError) => ({\r\n\r\n    type: types.LogSetErrorAdmin,\r\n    payload : msgError\r\n    \r\n   \r\n    \r\n})\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouter = ({\r\n    isLoggedIn,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (!isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/custom\" />)\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ({\r\n    isLoggedIn,\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/login\" />)\r\n        )}\r\n        />\r\n    )\r\n            \r\n            // (isLoggedIn )\r\n            // ? (<Component {...props} />) \r\n            // : (<Redirect to =\"/login\" />)\r\n        \r\n    \r\n        \r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateAdminRouter = ({\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n         component={ (props) => (\r\n            (isAdmin)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/admin\" />)\r\n        )}\r\n        />\r\n    )\r\n        \r\n}\r\n\r\nPrivateAdminRouter.propTypes = {\r\n\r\n    isAdmin : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","\r\n\r\n\r\nexport const getUser = async (user,password) => {\r\n\r\n    // const url = `https://cartaya.graciadev.com/api/login/login=${user}&pass=${password}`;\r\n    const url = ` https://cartaya.graciadev.com/api/login/login?user=${user}&pass=${password}`\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {content} = await resp.json();\r\n\r\n    \r\n    return content ;\r\n\r\n}","import React  from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { login, setError } from '../actions/auth'\r\nimport {Button} from '@material-ui/core/'\r\nimport '../styles/login.css'\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUser } from '../helpers/getUser'\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {error,msgError} = useSelector( state => state.auth );\r\n    const [formValue,handleInputChange] = useForm({\r\n\r\n        user:'admin',\r\n        password:'123456'\r\n    })\r\n    \r\n    const{user,password} = formValue;\r\n  \r\n   \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        getUser(user,password).then(tok => {\r\n            if(tok){\r\n                dispatch(login(user,password))\r\n            }else{\r\n                dispatch(setError('Usuario o contraseña incorrecta'))\r\n            }\r\n           \r\n        }).catch(e => console.log(e.message))\r\n       \r\n\r\n        \r\n        \r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"content__form-login\">\r\n            \r\n                <form className=\"form__login\" onSubmit={handleLogin}>\r\n                <h1 className=\"name__carta\"> Carta YA ! </h1>\r\n                    \r\n                    <input type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"user\"\r\n                        value={user}\r\n                        className=\"auth__input\"\r\n                        onChange={handleInputChange} \r\n                        id=\"id__email\"\r\n                        />\r\n                    <input type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        className=\"auth__input\"\r\n                        onChange={handleInputChange} \r\n                        />\r\n                    <Button className=\"btn\" type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\" > Login</Button>\r\n                    { (error) && <Alert severity=\"error\">{msgError}</Alert>} \r\n                   <Link className=\"text__registro\" to=\"/admin\"> Admin </Link>\r\n                    \r\n                     <Link className=\"text__registro\" to=\"/auth/register\">\r\n                         Registrarse</Link>\r\n                </form>\r\n               \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport {Button} from '@material-ui/core'\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div className=\"content__form-login\">\r\n            \r\n            <form className=\"form__login\">\r\n                {/* {\r\n                    (msgError !== null) &&\r\n                    <div className=\"auth__alert-error\">\r\n                      {msgError}\r\n                    </div>\r\n                } */}\r\n            <h3 className=\"name__carta\">Registro </h3>\r\n           \r\n            <input type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                id=\"id__email\"\r\n                // onChange={handleInputChange}\r\n                />\r\n                \r\n               \r\n                <input type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // \r\n                />\r\n                \r\n                <input type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // value={password}\r\n                />\r\n                <input type=\"password\"\r\n                placeholder=\"Confirm Password \"\r\n                name=\"password2\"\r\n                className=\"auth__input\"\r\n                // onChange={handleInputChange}\r\n                // value={password2}\r\n                />\r\n\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"onSubmit\" className=\"btn\">Registrarme</Button>\r\n                 \r\n                 <Link to=\"/auth/login\" className=\" text__registro\" >\r\n                     ¿ Ya esta registrado ?\r\n            </Link>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TextField,Button} from '@material-ui/core'\r\nimport '../../styles/adminPrincipal.css'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { loginAdmin, setErrorAdmin } from '../../actions/auth'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUser } from '../../helpers/getUser'\r\nimport { getData } from '../../helpers/getData'\r\n\r\n\r\n\r\n\r\nexport const LoginAdmin = (({history}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {errorAdmin,msgErrorAdmin} = useSelector( state => state.auth );\r\n    const [formValues,handleInputChange] = useForm({\r\n        user: 'admin',\r\n        password: '123456'\r\n    })\r\n    \r\n    const {user,password} = formValues   \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        getUser(user,password).then(tok => {\r\n            if(tok){\r\n                dispatch(loginAdmin(user,password))\r\n            }\r\n            else{\r\n                \r\n                dispatch(setErrorAdmin('Usuario o contraseña incorrecta'))\r\n            }\r\n        }).catch(e => console.log(e.message))\r\n\r\n        \r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"contain__admin_login\">\r\n            <div className=\"contain__form-login\">\r\n                <form className=\"form__login-admin\" noValidate autoComplete=\"off\" onSubmit={handleLogin}>\r\n                    <h1 className=\"text__login\">LOGIN</h1>\r\n                     { (errorAdmin) && <Alert severity=\"error\">{msgErrorAdmin}</Alert>} \r\n                    <TextField id=\"standard-basic\" label=\"Usuario\" value={user} name=\"user\" onChange={handleInputChange}\r\n                    />\r\n                    <TextField id=\"filled-basic\" label=\"Contraseña\" value={password} name=\"password\" onChange={handleInputChange} type=\"password\"/>\r\n                    <Button variant=\"contained\" color=\"secondary\" type=\"onSubmit\" className=\"btn__login\" >Login</Button>\r\n                \r\n                    <Link className=\"text__registro\" to=\"/auth\"> User </Link>   \r\n                              \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n)","import React from 'react'\r\n\r\nimport {\r\n   \r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\nimport { Login } from '../componentes/Login';\r\nimport { Register } from '../componentes/Register';\r\nimport {LoginAdmin} from '../componentes/Admin/LoginAdmin'\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n            <Route  path=\"/auth/login\" component={ Login} />\r\n            <Route  path=\"/auth/register\" component={ Register} />\r\n            {/* <Route path =\"/auth/admin\" component={LoginAdmin} /> */}\r\n\r\n            <Redirect to =\"/auth/login\" />\r\n            </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport '../styles/menu.css'\r\nimport { CustomMenu } from './CustomMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Menu = () => {\r\n\r\n    const {colorP,colorS,url} = useSelector( state => state.custom );\r\n    console.log(url)\r\n    return (\r\n        <div className=\"content__menu\" style={{backgroundColor:colorP}}>\r\n            <div className=\"menu\">\r\n                {/* <CustomMenu/> */}\r\n                <nav className=\"nav__menu\" style={{backgroundColor:colorS}} >\r\n                <div className=\"logo\">\r\n                <img src={url} alt=\"logo\"></img>\r\n                 </div>   \r\n                    <ul className=\"list__nav\"> \r\n                        <li className=\"item__nav\">Entradas</li>\r\n                        <li className=\"item__nav\">Platos Fuertes</li>\r\n                        <li className=\"item__nav\">Postres</li>\r\n                        <li className=\"item__nav\">Bebidas</li>\r\n                    </ul>\r\n                    \r\n                </nav>\r\n                <div className=\"content__menu-info\">\r\n                    <h1>Menu</h1\r\n                    ></div>\r\n                \r\n                <Link to=\"/drap\"> drap and drop </Link>\r\n            </div>\r\n           \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddUser() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Hello World\" />\r\n        <TextField disabled id=\"standard-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" />\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField id=\"standard-search\" label=\"Search field\" type=\"search\" />\r\n        <TextField\r\n          id=\"standard-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"filled-disabled\"\r\n          label=\"Disabled\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField id=\"filled-search\" label=\"Search field\" type=\"search\" variant=\"filled\" />\r\n        <TextField\r\n          id=\"filled-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"outlined-disabled\"\r\n          label=\"Disabled\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" variant=\"outlined\" />\r\n        <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport {Button} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport AddUser from './AddUser';\r\nimport {useDispatch} from 'react-redux'\r\nimport { addUsers } from '../../actions/users';\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#444',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      \r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function ListUser() {\r\n  const classes = useStyles();\r\n  const url = `https://www.breakingbadapi.com/api/characters?limit=10&offset=8`\r\n  const {loading,data} = useFetch(url)\r\n  console.log(data)\r\n  const dispatch = useDispatch();\r\n  const handleView = (id) => {\r\n    \r\n    dispatch(addUsers(id))\r\n    \r\n  }\r\n\r\n  \r\n  return (\r\n      \r\n    <TableContainer component={Paper}>\r\n        {(loading )&& <div className=\"loading\" style={{width:'100%'}}> <LinearProgress /></div>}\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n      \r\n        <TableHead>\r\n          <TableRow>\r\n          \r\n            <StyledTableCell>Id</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Nombre</StyledTableCell>\r\n            <StyledTableCell align=\"right\">nickname</StyledTableCell>\r\n            <StyledTableCell align=\"right\">category</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Opcion</StyledTableCell>\r\n           \r\n          </TableRow>\r\n         \r\n        </TableHead>\r\n      \r\n        <TableBody >\r\n         \r\n             \r\n              {\r\n                  (!loading) && \r\n                  data.map(inf => (\r\n                    <StyledTableRow key={inf.char_id} className=\"body__table\">\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {inf.char_id}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{inf.name}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{inf.nickname}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{inf.category}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>Editar</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />}>Eliminar</Button>\r\n                    <Button variant=\"contained\" onClick={()=> handleView(inf)} startIcon={<VisibilityIcon/>} > Ver </Button></StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))\r\n              }\r\n             \r\n          \r\n           \r\n         \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import {useState,useEffect,useRef} from 'react'\r\n\r\nexport const useFetch = (url) => {\r\n   \r\n    const isMounted = useRef(true)\r\n    \r\n    const [state, setstate] = useState({data: null , loading : true , error:null})\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            isMounted.current = false ;\r\n        }\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       \r\n       setstate( {data : null, loading :true , error : null})\r\n       \r\n        \r\n        fetch(url)\r\n        .then( resp => resp.json())\r\n        .then( data => {\r\n\r\n            \r\n               \r\n                if( isMounted.current){\r\n                    setstate({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    })\r\n                }\r\n                \r\n           \r\n            \r\n        })\r\n        .catch( () => {\r\n            setstate({\r\n                data:null,\r\n                loading : false,\r\n                error: 'No se pudo cargar la info'\r\n                         })\r\n        })\r\n    }, [url])\r\n\r\n   \r\n    return state ;\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const addUsers = (info) => ({\r\n\r\n\r\n    type: types.UserAdd,\r\n    payload: info\r\n\r\n})","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { logoutAdmin } from '../../actions/auth';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {Button} from '@material-ui/core'\r\nimport '../../styles/user.css'\r\nimport addUser from './AddUser';\r\nimport AddUser from './AddUser';\r\nimport ListUser from './ListUser';\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    \r\n    zIndex: theme.zIndex.drawer + 1,\r\n    justifyContent: 'space_around',\r\n    backgroundColor: '#999',\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nexport const AdminUsers = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const [showUser, setShowUser] = useState(false)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleLogout = (e) => {\r\n\r\n     dispatch(logoutAdmin())\r\n     console.log('deslogueado admin')\r\n  }\r\n  \r\n  const handleUsuarios = (e) => {\r\n    \r\n    setShowUser(!showUser)\r\n    setShowAdd(false)\r\n     \r\n  }\r\n  const handleAddUser = (e) => {\r\n     setShowUser(false)\r\n     setShowAdd(true)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={classes.root} >\r\n      <CssBaseline />\r\n      <AppBar\r\n        id=\"navBar\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Administrador\r\n          </Typography>\r\n          <div onClick={handleLogout} className=\"logout\"><ExitToAppIcon/> Log out </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Usuarios', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text} onClick={handleUsuarios}>\r\n              <ListItemIcon>{index % 2 === 0 ? <PeopleIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n         <Divider />\r\n         <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {\r\n          (showUser) && <div><h1>Usuarios <Button onClick={handleAddUser} variant=\"contained\" endIcon={<PersonAddIcon/>}>Agregar</Button></h1>  <ListUser/></div> \r\n        }\r\n        {\r\n          (showAdd) && <AddUser />\r\n        }\r\n        \r\n      </main>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n   \r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\n\r\nimport { PrincipalAdmin } from '../componentes/Admin/LoginAdmin';\r\nimport { AdminUsers } from '../componentes/Admin/AdminUsers';\r\n\r\n\r\n\r\nexport const AdminRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n            \r\n            <Route exact path=\"/\" component={AdminUsers} />\r\n\r\n            <Redirect to =\"/auth/admin\" />\r\n            </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouterAdmin = ({\r\n    isAdmin,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n         component={ (props) => (\r\n            (!isAdmin)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/\" />)\r\n        )}\r\n        />\r\n    )\r\n        \r\n}\r\n\r\nPublicRouterAdmin.propTypes = {\r\n\r\n    isAdmin : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux'\r\nimport React ,{useEffect} from 'react';\r\nimport { Custom } from \"../componentes/Custom\";\r\nimport {PublicRouter} from './PublicRoute'\r\nimport {PrivateRouter }from './PrivateRoute'\r\nimport {PrivateAdminRouter} from './admin/PrivateAdminRouter'\r\nimport {AuthRouter} from './AuthRouter'\r\nimport { Menu } from \"../componentes/Menu\";\r\nimport { DrapandDrop } from \"../componentes/DrapandDrop\";\r\nimport {AdminRouter} from './AdminRouter'\r\nimport { PublicRouterAdmin } from \"./admin/PublicRouterAdmin\";\r\nimport { LoginAdmin } from \"../componentes/Admin/LoginAdmin\";\r\n\r\n\r\n\r\n\r\nexport default function AppRouter() {\r\n \r\n  \r\n  const {logged,admin} = useSelector( state => state.auth );\r\n  console.log(logged,admin)\r\n\r\n  \r\n  \r\n  return (\r\n   \r\n      \r\n        <Router>\r\n        <div>\r\n      \r\n            <Switch>\r\n               \r\n               \r\n                {/* <PrivateAdminRouter isAdmin={admin}  path=\"/admin\" component={AdminRouter} /> */}\r\n                <PublicRouter isLoggedIn={logged}  path=\"/auth\" component={ AuthRouter}/>\r\n                \r\n                <PrivateAdminRouter isAdmin={admin} exact path=\"/\" component={AdminRouter} />\r\n                <PublicRouterAdmin isAdmin={admin} path= \"/admin\" component={LoginAdmin} />\r\n                \r\n                <PrivateRouter isLoggedIn={logged}  path =\"/custom/menu\" component={Menu}/>\r\n                {/* <PrivateRouter isLoggedIn={logged}  path=\"/drap\" component={DrapandDrop} /> */}\r\n                <PrivateRouter isLoggedIn={logged}  exact path=\"/custom\" component={Custom} />\r\n                \r\n                 \r\n                <Redirect to =\"/auth/login\" />\r\n             </Switch>\r\n\r\n        </div>\r\n         \r\n    </Router>\r\n     \r\n  );\r\n}","import {createStore,combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { customReducer } from '../reducers/customReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    custom: customReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = { logged: false, admin: false }, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                ...action.payload,\r\n                logged: true,\r\n                admin: false\r\n            }\r\n        case types.loggout:\r\n            return {\r\n                ...action.payload,\r\n                logged: false,\r\n                admin: false\r\n            }\r\n        case types.loginAdmin:\r\n            return {\r\n                ...action.payload,\r\n                admin: true,\r\n                logged: false\r\n            }\r\n        case types.logoutAdmin:\r\n            return {\r\n                ...action.payload,\r\n                logged: false ,\r\n                admin: false,\r\n            }\r\n        case types.LogSetError:\r\n            return {\r\n                error: true,\r\n                msgError: action.payload\r\n            }\r\n\r\n            case types.LogSetErrorAdmin:\r\n            return {\r\n                errorAdmin: true,\r\n                msgErrorAdmin: action.payload\r\n            }\r\n        case types.LogRemoveError:\r\n            return {\r\n                error: null,\r\n                msgError: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const customReducer = (state = {},action) => {\r\n\r\n    switch (action.type) {\r\n        case types.colores:\r\n            return{\r\n                ...action.payload\r\n            }\r\n    \r\n        default :\r\n        return state ;\r\n    }\r\n}","import React  from 'react'\r\nimport './cartaYa.css'\r\n\r\nimport AppRouter from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CartaYa = () => {\r\n    \r\n    return (\r\n        \r\n        <Provider store = {store} >\r\n          <AppRouter/>\r\n        </Provider>\r\n      \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { CartaYa } from './CartaYa';\n\nReactDOM.render(\n \n    <CartaYa />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}